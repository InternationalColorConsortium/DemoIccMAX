###############################################################
#
## Copyright (Â©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 12-MAY-2025 at 0700 EDT by David Hoyt (Â©)
#
## Intent: licc-macos-13 | Work in Progress
#
## TODO: Instrumentation for AFL=Bool Builds & Report
#

#
#
###############################################################

name: "XNU ICC Scanner x64"

on:
  workflow_dispatch:

jobs:
  build-macos:
    name: XNU Little ICC Scanner Demo
    runs-on: macos-13
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git anonymous identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
    - name: Install dependencies
      run: |
        brew install nlohmann-json libxml2 wxwidgets libtiff libpng jpeg little-cms2 llvm iccmax
    - name: Get research branch for XNU Little ICC Scanner Demo
      run: |
        git clone https://github.com/xsscx/PatchIccMAX.git
        cd PatchIccMAX
        git checkout research

    - name: Decscription
      run: |
          echo ""
          echo "Little ICC Scanner v.01 [licc]"
          echo "[Research Branch | v.2.3.0 | -lIccProfLib2 -lIccXML2 -llcms2]"
          echo "Copyright (Â©) 2022-2025 David H Hoyt LLC. All rights reserved."
          echo "Demonstration measurement and analysis toolchain for ICC profiles."
          echo "Evaluate AToB/BToA transform integrity for RGB and CMYK workflows"
          echo "Detect malformed, corrupted, or heuristics in ICC profiles"
          echo "Log detailed tag structure and potential exploit vectors"
          echo "Bug Class: Profile Bleed | https://srd.cx/cve-2022-26730"
          echo ""
          
    - name: Config and Build the Little ICC Scanner Demo
      run: |
        cd PatchIccMAX/contrib/Build/cmake/cov
        export CC=clang
        export CXX=clang++
        export PATH="/usr/lib/llvm-17/bin:$PATH"
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
        echo "[*] Building static libraries..."
        echo "[*] Building iccProfLib..."
        make -C  iccProfLib -f Makefile.iccProfLib clean all AFL=0
        echo "[*] Building iccXmlLib..."
        make -C iccXmlLib -f Makefile.iccXmlLib clean all AFL=0
        # bash check_build.sh 2>&1 | tee check.log
        # tree -a 2>&1 | tee tree.log
          # Add Tools/* to PATH
          for d in ./*; do
            [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
          done
          echo "=== Navigating to licc Directory ==="
          cd licc || { echo "ERROR: 'licc' directory not found"; exit 0; }
          echo "=== Starting Compilation with g++ (with ASan/UBSan) ==="
          set -x
          rm -f licc *.profraw *.profdata
          clang++ -stdlib=libc++ -std=c++17 -fsanitize=address,undefined -fno-omit-frame-pointer -fno-optimize-sibling-calls -fprofile-instr-generate -fcoverage-mapping -g3 -O1 -Wall -Wextra -Wpedantic -Wno-unused-parameter -Wno-type-limits -Wno-overloaded-virtual -I../../../../../IccProfLib -I../../../../../IccXML/IccLibXML -I/usr/local/include -DPLATFORM_MACOS -DARCH_X64 -o licc licc.cpp -L/usr/local/lib -L../iccProfLib -L../iccXmlLib -lIccProfLib2 -lIccXML2 -llcms2 -lz -lm -lc++abi -fprofile-instr-generate -fcoverage-mapping
          set +x
          echo "=== Compilation Complete ==="
    - name: Run the Little ICC Scanner Demo
      run: |
        cd PatchIccMAX/contrib/Build/cmake/cov/licc
          ls -lh licc || echo "ERROR: licc binary not created"
          echo "=== licc Testing Start ==="
          for f in \
            ../../../../UnitTest/cve-2023-46602.icc \
            ../../../../UnitTest/icPlatformSignature-ubsan-poc.icc \
            ../../../../UnitTest/icSigMatrixElemType-Read-poc.icc; do
            echo "--- Running: $f ---"
            LLVM_PROFILE_FILE="licc.profraw" ./licc -v 1 "$f" || echo "Run on $f exited with code $?"
          done
          echo "=== licc Testing Complete ==="

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: iccmax-cov-binaries
        path: PatchIccMAX/contrib/Build/cmake/cov/**/*

    - name: Upload build logs and tree
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          PatchIccMAX/contrib/Build/cmake/cov/build.log
          PatchIccMAX/contrib/Build/cmake/cov/check.log
          PatchIccMAX/contrib/Build/cmake/cov/tree.txt
    - name: Upload diagnostics
      uses: actions/upload-artifact@v4
      with:
        name: diagnostics
        path: |
          PatchIccMAX/contrib/Build/cmake/cov/sysinfo.txt
          PatchIccMAX/contrib/Build/cmake/cov/env_dump.txt
    - name: Summary Report
      if: always()
      run: |
        echo "### ðŸ§ª Ubuntu CI Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Instrumented Build: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“¦ Binaries: iccmax-cov-binaries" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“Š Coverage: html-coverage-report (LLVM format)" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ§¾ Logs: build.log, tree.txt, sysinfo.txt" >> $GITHUB_STEP_SUMMARY
