###############################################################
#
## Copyright (Â©) 2024 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 10-MAY-2025 at 0700 EDT by David Hoyt (Â©)
#
## Intent: Issue113cov | Work in Progress
#
## TODO: Instrumentation for AFL=Bool Builds & Report
#

#
#
###############################################################

name: "Issue113covReport"

on:
  workflow_dispatch:

jobs:
  build-linux:
    name: WIP | Build off research AFL=0
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git anonymous identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxml2 libxml2-dev libtiff-dev nlohmann-json3-dev build-essential \
          cmake clang clang-tools python3 python3-pip libwxgtk3.2-dev wx-common \
          libopencl-clang-17-dev curl git llvm clang-17 libjpeg-dev libpng-dev \
          lcov gcovr tree moreutils
    - name: Get research
      run: |
        git clone https://github.com/xsscx/PatchIccMAX.git
        cd PatchIccMAX
        git checkout research
    - name: Configure and Build cov from research AFL=0
      run: |
        cd PatchIccMAX/contrib/Build/cmake/cov
        export CC=clang
        export CXX=clang++
        export PATH="/usr/lib/llvm-17/bin:$PATH"
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
        bash build.sh 2>&1 | tee build.log
        bash check_build.sh 2>&1 | tee check.log
        cd iccRoundTrip
        make -f Makefile.iccRoundTrip clean all AFL=0
        tree -a 2>&1 | tee tree.log

    - name: Run Unit Tests (CI Harness)
      run: |
          cd PatchIccMAX/contrib/Build/cmake/cov
          # Add Tools/* to PATH
          for d in ./*; do
            [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
          done
          echo "ENTERING INNER COV STUB"
          echo "=================== Extering PatchIccMAX/contrib/Build/cmake/cov ========================================="
          echo "=== Running COV | Test Unit Dump All for Issue 113 ==="      
          set +e
          pwd
          echo "=== Running COV | ./iccRoundTrip_test ../../../../../Testing/Issue113/Coated_Fogra39L_VIGC_300-runner.icc ==="
          cd iccRoundTrip
          ./iccRoundTrip_test ../../../../../Testing/Issue113/Coated_Fogra39L_VIGC_300-runner.icc
          echo "=== Running COV | llvm-profdata merge -sparse *.profraw -o default.profdata ==="
          llvm-profdata merge -sparse *.profraw -o default.profdata
          echo "=== Running COV | llvm-cov report ./iccRoundTrip_test -instr-profile=default.profdata ==="
          llvm-cov report ./iccRoundTrip_test -instr-profile=default.profdata 
          echo "=== Running COV | llvm-cov show ./iccRoundTrip_test -instr-profile=default.profdata ==="
          llvm-cov show ./iccRoundTrip_test -instr-profile=default.profdata > iccRoundTrip_test-report.txt
          echo "=== Running COV | ./iccDumpProfile_test ../../../../../Testing/Issue113/Coated_Fogra39L_VIGC_300-runner.icc ==="
          cd ../iccDumpProfile
          ./iccDumpProfile_test ../../../../../Testing/Issue113/Coated_Fogra39L_VIGC_300-runner.icc
          ./iccDumpProfile_test -v  ../../../../../Testing/Issue113/Coated_Fogra39L_VIGC_300-runner.icc
          echo "=== Running COV | llvm-profdata merge -sparse *.profraw -o iccDumpProfile_test.profdata ==="
          llvm-profdata merge -sparse *.profraw -o iccDumpProfile_test.profdata
          echo "=== Running COV | llvm-cov report ./iccDumpProfile_test -instr-profile=iccDumpProfile_test.profdata ==="
          llvm-cov report ./iccDumpProfile_test -instr-profile=iccDumpProfile_test.profdata
          echo "=== Running COV | llvm-cov show ./iccDumpProfile_test -instr-profile=iccDumpProfile_test.profdata ==="
          llvm-cov show ./iccDumpProfile_test -instr-profile=iccDumpProfile_test.profdata  > iccDumpProfile_test-report.txt
          # genhtml -o htmlcov iccRoundTrip_test.lcov
          cd ../
          EXIT_CODE=$?
          if [ "$EXIT_CODE" -ne 0 ]; then
          echo "PoC executed as expected with failure code $EXIT_CODE."
          else
          echo "PoC unexpectedly succeeded. Please verify runtime behavior."
          fi
          echo "=================== Exiting PatchIccMAX/contrib/Build/cmake/cov ========================================="
          echo "========= INNER COV STUB EXIT ========="       
#    - name: Generate Coverage Report (HTML)
#      run: |
#        cd PatchIccMAX/contrib/Build/cmake/cov
#        llvm-profdata merge -sparse default.profraw -o coverage.profdata || true
#        llvm-cov show ./iccToXml/iccToXml_test \
#          -instr-profile=coverage.profdata \
#          -format=html -output-dir=cov_html || true

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: iccmax-cov-binaries
        path: PatchIccMAX/contrib/Build/cmake/cov/**/*

    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      with:
        name: html-coverage-report
        path: PatchIccMAX/contrib/Build/cmake/cov/cov_html/

    - name: Upload build logs and tree
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          PatchIccMAX/contrib/Build/cmake/cov/build.log
          PatchIccMAX/contrib/Build/cmake/cov/check.log
          PatchIccMAX/contrib/Build/cmake/cov/tree.txt
    - name: Upload diagnostics
      uses: actions/upload-artifact@v4
      with:
        name: diagnostics
        path: |
          PatchIccMAX/contrib/Build/cmake/cov/sysinfo.txt
          PatchIccMAX/contrib/Build/cmake/cov/env_dump.txt
    - name: Summary Report
      if: always()
      run: |
        echo "### ðŸ§ª Ubuntu CI Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Instrumented Build: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“¦ Binaries: iccmax-cov-binaries" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“Š Coverage: html-coverage-report (LLVM format)" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ§¾ Logs: build.log, tree.txt, sysinfo.txt" >> $GITHUB_STEP_SUMMARY
