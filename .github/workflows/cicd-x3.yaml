###############################################################
#
## Copyright (©) 2024 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 22-APRIL-2025 at 1900 EDT by David Hoyt (©)
#
## Intent: iccMAX CICD Stub
#
## TODO: Refactor for all Windows & UNIX Device Reporting
#
#
###############################################################

name: "iccMAX Stub"

on:
  workflow_dispatch:

jobs:
  build-linux:
    name: iccMAX CICD Stub 
    runs-on: ubuntu-latest
    outputs:
      build-success: ${{ steps.check.outputs.success }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git anonymous identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libpng-dev libxml2 libxml2-dev libtiff-dev nlohmann-json3-dev build-essential \
            cmake clang clang-tools python3 python3-pip libwxgtk3.2-dev wx-common \
            libopencl-clang-17-dev curl git llvm clang-17 libjpeg-dev

      - name: Get PR129
        run: |
          git clone https://github.com/xsscx/PatchIccMAX.git
          cd PatchIccMAX

      - name: Configure PR129
        run: |
          cd PatchIccMAX/Build
          export CC=gcc
          export CXX=g++
          export PATH="/usr/lib/llvm-17/bin:$PATH"
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
          clang++ --version
          clang --version
          cmake -DCMAKE_INSTALL_PREFIX="$HOME/.local" -DCMAKE_BUILD_TYPE=Debug \
                -DENABLE_TOOLS=ON -DENABLE_SHARED_LIBS=ON -DENABLE_STATIC_LIBS=ON \
                -DENABLE_TESTS=ON -DENABLE_INSTALL_RIM=ON -DENABLE_ICCXML=ON \
                -Wno-dev -DCMAKE_CXX_FLAGS="-g -fsanitize=address,undefined -fno-omit-frame-pointer -Wall" \
                -Wno-dev Cmake/

      - name: 🛠️ Build PR129
        run: |
          cd PatchIccMAX/Build
          make -j$(nproc)
        continue-on-error: true

      - name: 📂 Prepare Testing Environment
        run: |
          cd PatchIccMAX/Testing
          for d in ../Build/Tools/*; do
            [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
          done

      - name: 🧪 Run CI Checks
        run: |
          cd PatchIccMAX/Testing
          # curl -fsSL -o iccMAX-cicd-build-checks.sh https://raw.githubusercontent.com/xsscx/PatchIccMAX/refs/heads/pr129/contrib/UnitTest/iccMAX-cicd-build-checks.sh
          chmod +x CreateAllProfiles.sh
          ./CreateAllProfiles.sh
          ../Build/Tools/IccDumpProfile/iccDumpProfile -v ICS/Rec2100HlgFull-Part2.icc 2>&1 | tee dump-output.log
        continue-on-error: true

      - name: ✅ Check build success
        id: check
        run: |
          if [ -f PatchIccMAX/Build/CMakeCache.txt ]; then
            echo "✅ Build configuration exists."
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Build configuration failed."
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: master-build-linux
          path: PatchIccMAX/Build

      - name: 🧾 Upload CI check logs
        uses: actions/upload-artifact@v4
        with:
          name: runner-output
          path: PatchIccMAX/Testing/CreateAllProfiles.log
      - name: Summary Report
        if: always()
        run: |
          echo "### Ubuntu Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Build Directory: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts Uploaded: iccmax-macos-clang" >> $GITHUB_STEP_SUMMARY
          echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
