###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 25-JULY-2025 at 1200Z by David Hoyt (©)
#
## Intent: code-coverage-proto
#
## TODO: Refactor into XNU Runner Checks
#
#
###############################################################

name: "cov"

on:
  workflow_dispatch:

jobs:
  build-linux:
    name: Build Instrumented Binaries from Master
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git anonymous identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxml2 libxml2-dev libtiff-dev nlohmann-json3-dev build-essential \
          cmake clang clang-tools python3 python3-pip libwxgtk3.2-dev wx-common \
          libopencl-clang-17-dev curl git llvm clang-17 libjpeg-dev libpng-dev

    - name: Clone research
      run: |
        git clone https://github.com/xsscx/PatchIccMAX.git
        cd PatchIccMAX
        git checkout master

    - name: Configure the build with CMake
      run: |
        cd PatchIccMAX/contrib/Build/cmake/cov
        export CC=clang
        export CXX=clang++
        export PATH="/usr/lib/llvm-17/bin:$PATH"
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
        clang++ --version
        clang --version
        bash build.sh
        bash check_build.sh
        find . -type f \( -perm -111 -o -name "*.a" -o -name "*.so" -o -name "*.dylib" \) -mmin -1440 ! -path "*/.git/*" ! -path "*/CMakeFiles/*" ! -name "*.sh" -print `` 
        ls
        tree

    - name: Upload coverage-instrumented binaries
      uses: actions/upload-artifact@v4
      with:
        name: iccmax-cov-binaries
        path: PatchIccMAX/contrib/Build/cmake/cov/**/*

    - name: Gather system information
      run: |
        uname -a
        cat /etc/os-release
        gcc -v
        lscpu
        free -m
        df -h

    - name: Summary Report
      if: always()
      run: |
         echo "### Ubuntu Build Summary" >> $GITHUB_STEP_SUMMARY
         echo "- Build Directory: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
         echo "- Artifacts Uploaded: iccmax-cov-binaries" >> $GITHUB_STEP_SUMMARY
         echo "- Status: Success" >> $GITHUB_STEP_SUMMARY

