###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 02-AUGUST-2025 at 1400Z by David Hoyt (©)
#
## Intent: WASM2
#
## 
#
#
###############################################################

name: "WASM2"

on:
  workflow_dispatch:

jobs:
  build-linux:
    name: Build and Test Linux Master Branch
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git anonymous identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Cache Emscripten SDK
      uses: actions/cache@v4
      with:
        path: emsdk
        key: emsdk-${{ runner.os }}-${{ hashFiles('emsdk/**') }}

    - name: Run WASM Build Script
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/InternationalColorConsortium/DemoIccMAX/refs/heads/wasm/wasm_remote_build.sh)" &> wasm_build.log

    - name: Upload WASM Build Logs
      uses: actions/upload-artifact@v4
      with:
        name: wasm-build-log
        path: wasm_build.log

    - name: Gather system information
      run: |
        uname -a
        cat /etc/os-release
        gcc -v
        lscpu
        free -m
        df -h

    - name: List Build Outputs
      run: |
        ls -R DemoIccMAX/Build

    - name: Verify WASM binaries
      continue-on-error: true
      run: |
        if ls DemoIccMAX/Build/Tools/*.wasm; then
          echo "✅ WASM binaries exist."
        else
          echo "⚠️ WASM binaries missing."
        fi

    - name: Additional Post-Build Debugging
      run: |
        find DemoIccMAX/Build/Tools/ -type f \( -name '*.js' -o -name '*.wasm' \) -ls
        find DemoIccMAX/Build/IccProfLib/ -name '*.a' -exec sh -c 'for obj in $(ar t "$1" | grep "\.o$"); do ar p "$1" "$obj" > "/tmp/$obj"; command -v wasm-objdump && wasm-objdump -x "/tmp/$obj" | head || echo "wasm-objdump not installed"; done' sh {} \;

    - name: Upload WASM Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: master-build-linux
        path: DemoIccMAX/Build/Tools/*.wasm
