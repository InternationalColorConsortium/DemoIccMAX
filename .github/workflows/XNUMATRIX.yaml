###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 12-AUGUST-2025 at 1500Z by David Hoyt (©)
#
## Intent: XNUMATRIX
#
#
#
#
#
#
#
#
#
#
#
###############################################################


name: "XNUMATRIX"

on:
  workflow_dispatch:

jobs:
  build-test-matrix:
    name: PoC on macOS ${{ matrix.macos }} ${{ matrix.arch }}
    runs-on: macos-${{ matrix.macos }}
    strategy:
      fail-fast: false
      matrix:
        macos: [13, 14, Latest]
        arch: [x86_64, arm64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Install Dependencies
        run: |
          brew install nlohmann-json libxml2 wxwidgets libtiff libpng jpeg

      - name: Clone and Checkout PatchIccMAX
        run: |
          git clone https://github.com/xsscx/PatchIccMAX.git
          cd PatchIccMAX
          git checkout cmake

      - name: Configure Build with CMake (ASan + Debug)
        run: |
          cd PatchIccMAX/Build
          export CC=clang
          export CXX=clang++
          export PATH="/usr/lib/llvm-17/bin:$PATH"
          clang++ --version
          clang --version
          sudo rm -rf /Library/Frameworks/Mono.framework/Headers/png.h
          cmake -S Cmake -B . -DCMAKE_PREFIX_PATH="$(brew --prefix nlohmann-json);$(brew --prefix libtiff);$(brew --prefix wxwidgets)"
          cmake --build . -v
      - name: Build with make
        run: |
          cd PatchIccMAX/Build
          make -j$(sysctl -n hw.logicalcpu)

      - name: Run PoC Harness
        run: |
          cd PatchIccMAX/Testing
          for d in ../Build/Tools/*; do
            [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
          done
          echo "RUN Local Scripts"
          pwd
          ls
          find . -type f -name '*.sh' -print -exec sh '{}' \;
          echo "▶️ Running round-trip PoC on test profile..."
          set +e
          ../Build/Tools/IccRoundTrip/iccRoundTrip ICS/Rec2100HlgFull-Part2.icc
          EXIT_CODE=$?
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "💥 Expected crash observed with exit code $EXIT_CODE"
          else
            echo "⚠️ Unexpected success; crash was expected"
          fi

      - name: Verify Build Output
        run: |
          test -f PatchIccMAX/Build/CMakeCache.txt && echo "Build OK" || (echo "Missing build cache" && exit 1)

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: iccmax-bin-macos-${{ matrix.macos }}-${{ matrix.arch }}
          path: PatchIccMAX/Build

      - name: Upload CMake Logs
        uses: actions/upload-artifact@v4
        with:
          name: cmake-log-${{ matrix.macos }}-${{ matrix.arch }}
          path: PatchIccMAX/Build/CMakeCache.txt

      - name: Matrix Summary
        if: always()
        run: |
          echo "## macOS ${{ matrix.macos }} ${{ matrix.arch }} Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Directory: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
          echo "- PoC Executed: Yes" >> $GITHUB_STEP_SUMMARY
