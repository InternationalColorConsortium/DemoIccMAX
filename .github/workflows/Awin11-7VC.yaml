###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 08-AUGUST-2025 at 2300Z by David Hoyt (©)
#
## Intent: vcpkg ports file windows smoke test 7
#
## TODO: 
#
#
###############################################################

name: "a Win7v Test"

on:
  workflow_dispatch:

jobs:
  build-windows:
    name: PoC on Windows
    runs-on: windows-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Git anonymous identity
      - name: Set up Git anonymous identity
        shell: pwsh
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      # Clone PatchIccMAX repository and checkout vcpkg branch
      - name: Clone DemoIccMAX repository
        shell: pwsh
        run: |
          git clone https://github.com/InternationalColorConsortium/DemoIccMAX.git
          cd DemoIccMAX
          git checkout vcpkg
          Remove-Item -Force -ErrorAction SilentlyContinue vcpkg.json
          pwd
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe integrate install
          pwd
          Get-ChildItem
          ls
          vcpkg.exe --classic --overlay-ports=..\ports  install iccdev --debug
          vcpkg.exe --classic --overlay-ports=..\ports  install iccdev --debug
          pwd
          ls
          # Verify using the SAME instance/root + triplet for consistency
          Get-ChildItem -Filter *.exe | ForEach-Object { Write-Host "== Testing $($_.Name) =="; & $_.FullName --help 2>&1 | Select-Object -First 20; ""; }
          vcpkg.exe --classic list 
          vcpkg.exe --classic --overlay-ports=..\ports install iccdev[tools]:x64-windows --debug --clean-after-build
          Get-ChildItem -Recurse -File -Include *.exe,*.dll,*.lib,*.a -Path C:\test\vcpkg | Where-Object { $_.FullName -match 'iccdev' -and $_.FullName -notmatch '\\CMakeFiles\\' -and $_.Name -notmatch '^CMake(C|CXX)CompilerId\.exe$' } | ForEach-Object { $_.FullName }
          
