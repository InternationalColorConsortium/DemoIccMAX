###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 02-MAY-2025 1800 EDT by David Hoyt (©)
#
## Intent: XNU-Dumper
#
## TODO: Refactor for all Windows & UNIX Device Reporting
#
#
#
#
#
#
#
#
#
###############################################################

name: "XNU-Dumper"

on:
  workflow_dispatch:

jobs:
  build-macos:
    name: Build research
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git anonymous identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
    - name: Clone the PatchIccMAX repository
      run: |
          git clone https://github.com/xsscx/PatchIccMAX.git
          cd PatchIccMAX
          git checkout research
          brew install nlohmann-json libxml2 wxwidgets libtiff libpng jpeg
    - name: Configure research
      run: |
        mkdir -p PatchIccMAX/Build
        cd PatchIccMAX/Build
        sudo rm -rf /Library/Frameworks/Mono.framework/Headers/png.h
        export CXX=clang++
        cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_CXX_FLAGS="-g -fsanitize=address,undefined -fno-omit-frame-pointer -Wextra -Wno-unused-parameter -Wno-unused-variable"  -Wno-dev -DENABLE_TOOLS=ON -DENABLE_SHARED_LIBS=ON -DENABLE_STATIC_LIBS=ON -DENABLE_TESTS=ON  -DENABLE_INSTALL_RIM=ON -DENABLE_ICCXML=ON Cmake/
        make -j32
    - name: Build research
      run: |
        cd PatchIccMAX/Build
        make -j$(sysctl -n hw.ncpu)
        pwd
        ls
    - name: Configure research
      run: |
        cd PatchIccMAX/Testing
        pwd
        ls
        echo "=== Running CI Stub ==="
         for d in ../Build/Tools/*; do
          [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
         done
        find . -type f -name '*.sh' -print -exec sh '{}' \;
        # /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/xsscx/PatchIccMAX/refs/heads/pr128/contrib/UnitTest/iccMAX-cicd-build-checks.sh)"
        /bin/zsh -c "$(curl -fsSL https://raw.githubusercontent.com/InternationalColorConsortium/DemoIccMAX/refs/heads/master/contrib/UnitTest/iccDumpProfile_checks.zsh)"
        echo "=== Running Test Unit Dump ICS/Rec2100HlgFull-Part2.icc ==="
        ../Build/Tools/IccDumpProfile/iccDumpProfile -v ICS/Rec2100HlgFull-Part2.icc
        echo "========= CI STUB EXIT ========="
          echo "========= BEGIN OUTSIDE COV STUB ========="
          echo "========= BEGIN INSIDE STUB ========="
          # cd PatchIccMAX/Testing
          # Add Tools/* to PATH
          for d in ../Build/Tools/*; do
            [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
          done
          echo "=================== Running Checks off research Branch =========================================" 
          set +e
          echo "RUN iccDumProfile"
          dir=../Testing; for f in "$dir"/*.{icc,icm}; do [ -f "$f" ] && echo ">>> Dumping: $f" && ../Build/Tools/IccDumpProfile/iccDumpProfile -v "$f"; done || true
          echo "RUN iccRoundTrip"
          dir=../Testing; for f in "$dir"/*.{icc,icm}; do [ -f "$f" ] && echo ">>> RoundTripping: $f" && ../Build/Tools/IccRoundTrip/iccRoundTrip "$f"; done || true
          echo "RUN sips"
          echo -n "Found ICC files: "; find . -type f -name "*.icc" -print0 | tee >(tr '\0' ' ') | while IFS= read -r -d '' f; do echo ">>> SIPS: $f"; sips --verify "$f" || true; done
          echo "========= INSIDE STUB EXIT ========="
          EXIT_CODE=$?
          if [ "$EXIT_CODE" -ne 0 ]; then
          echo "PoC executed as expected with failure code $EXIT_CODE."
          else
          echo "PoC unexpectedly succeeded. Please verify runtime behavior."
          fi
          echo "========= OUTSIDE STUB EXIT ========="
    - name: Summary Report
      if: always()
      run: |
          echo "### macOS Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Build Directory: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts Uploaded: iccmax-macos-clang" >> $GITHUB_STEP_SUMMARY
          echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
