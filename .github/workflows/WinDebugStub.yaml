###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 11-APRIL-2025 1751 EDT by David Hoyt (©)
#
## Intent: WinDebugStub
#
## TODO: Add Unit Test Suite
#
#
#
#
#
#
#
#
#
###############################################################

name: WinDebugStub

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout PR129
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Restore vcpkg Cache
        uses: actions/cache@v3
        with:
          path: C:\test\vcpkg
          key: Win70-${{ runner.os }}-${{ hashFiles('**/vcpkg.json', '**/bootstrap-vcpkg.bat') }}
          restore-keys: |
            Win70-${{ runner.os }}-
      - name: Setup Environment & Build Preparation
        shell: pwsh
        run: |
          Write-Host "============================= Starting Build =============================" -ForegroundColor Green
          Write-Host "C 2024-2025 David H Hoyt LLC. All rights reserved." -ForegroundColor Green
          
          $env:VSCMD_ARG_HOST_ARCH = "x64"
          $env:VSCMD_ARG_TGT_ARCH = "x64"
          
          $optDir = "C:\test"
          $vcpkgDir = "$optDir\vcpkg"
          $patchDir = "$optDir\PatchIccMAX"
          
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          
          if (-Not (Test-Path $optDir)) { New-Item -ItemType Directory -Path $optDir | Out-Null }
          if (-Not (Test-Path "$vcpkgDir\vcpkg.exe")) {
              git clone https://github.com/microsoft/vcpkg.git $vcpkgDir
              & "$vcpkgDir\bootstrap-vcpkg.bat"
          }
          if (-Not (Test-Path "$vcpkgDir\vcpkg.exe")) {
              Write-Host "? ERROR: vcpkg failed to install!" -ForegroundColor Red
              exit 1
          }
          $packages = @(
          "libpng:x64-windows", "jpeg:x64-windows", "jpeg:x64-windows-static",
          "nlohmann-json:x64-windows", "nlohmann-json:x64-windows-static",
          "libxml2:x64-windows", "libxml2:x64-windows-static",
          "tiff:x64-windows", "tiff:x64-windows-static",
          "wxwidgets:x64-windows", "wxwidgets:x64-windows-static"
          )
          foreach ($pkg in $packages) { & "$vcpkgDir\vcpkg.exe" install $pkg }
      - name: Clone PatchIccMAX Repository
        shell: pwsh
        run: |
          $patchDir = "C:\test\PatchIccMAX"
          if (Test-Path $patchDir) { Remove-Item -Recurse -Force $patchDir }
          git clone https://github.com/xsscx/PatchIccMAX.git $patchDir
          cd $patchDir
      - name: Configure & Build with CMake
        shell: pwsh
        run: |
          cd C:\test\PatchIccMAX\Build\Cmake
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE=C:/test/vcpkg/scripts/buildsystems/vcpkg.cmake `
            -DCMAKE_C_FLAGS="/MD /I C:/test/vcpkg/installed/x64-windows/include" `
            -DCMAKE_CXX_FLAGS="/MD /I C:/test/vcpkg/installed/x64-windows/include" `
            -DCMAKE_SHARED_LINKER_FLAGS="/LIBPATH:C:/test/vcpkg/installed/x64-windows/lib" `
            -DENABLE_TOOLS=ON `
            -DENABLE_SHARED_LIBS=ON `
            -DENABLE_STATIC_LIBS=ON `
            -DENABLE_TESTS=ON `
            -DENABLE_INSTALL_RIM=ON `
            -DENABLE_ICCXML=ON
          cmake --build build --config Release -- /m /maxcpucount:32
          Get-ChildItem -Recurse -Include *.exe
          Get-ChildItem -Recurse -Include *.lib
          Get-ChildItem -Recurse -Include *.exe,*.lib
      - name: AltCreateProfiles
        shell: pwsh
        run: |
          cd C:\test\PatchIccMAX\Testing
          pwd
          dir
          dir ..\
          copy ..\contrib\UnitTest\AltCreateProfiles.bat .
          .\AltCreateProfiles.bat

      - name: Verify Build Output
        shell: pwsh
        run: |
          $cmakeCache = "C:\test\PatchIccMAX\Build\Cmake\build\CMakeCache.txt"
          if (Test-Path $cmakeCache) {
            Write-Host "? Build succeeded. CMake cache found."
          } else {
            Write-Host "? Build failed! No CMakeCache.txt found."
            exit 1
          }
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: iccmax-windows-msvc
          path: C:\test\PatchIccMAX

      - name: Upload Windows Logs
        uses: actions/upload-artifact@v4
        with:
          name: iccmax-windows-logs
          path: C:\test\PatchIccMAX\Build\Cmake\build\CMakeCache.txt

      - name: Host System Info
        shell: pwsh
        run: |
          systeminfo
          Get-CimInstance -ClassName Win32_Processor

      - name: 🖥️ Host System Info
        shell: pwsh
        run: |
          systeminfo
          Get-CimInstance -ClassName Win32_Processor
      - name: Summary Report
        if: always()
        run: |
          echo "### Windows Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Build Directory: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts Uploaded: iccmax-windows-msvc" >> $GITHUB_STEP_SUMMARY
          echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
