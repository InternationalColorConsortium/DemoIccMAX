
###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt LLC. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 01-MAY-2025 0800 EDT by David Hoyt (©)
#
## Intent: CICD-11
#
## 
#
#
#
#
#
#
#
#
#
###############################################################

name: "CICD-11"

on:
  workflow_dispatch:

jobs:
  build-macos:
    name: Build PR129-Unit-Test
    runs-on: macos-latest
    strategy:
      fail-fast: false

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Configure Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: 📥 Clone PatchIccMAX (pr129)
        run: |
          git clone https://github.com/xsscx/PatchIccMAX.git
          cd PatchIccMAX

      - name: 🍺 Install Dependencies (brew)
        run: |
          brew install nlohmann-json libxml2 wxwidgets libtiff libpng jpeg

      - name: 🏗️ Setup Build Directory & Cleanup Conflicts
        run: |
          mkdir -p PatchIccMAX/Build
          sudo rm -rf /Library/Frameworks/Mono.framework/Headers/png.h

      - name: 🛠️ Run CMake Configuration
        run: |
          cd PatchIccMAX/Build
          export CXX=clang++
          sudo rm -rf /Library/Frameworks/Mono.framework/Headers/png.h
          cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
                -DCMAKE_CXX_FLAGS="-g -fsanitize=address,undefined -fno-omit-frame-pointer -Wextra -Wno-unused-parameter -Wno-unused-variable" \
                -Wno-dev \
                -DENABLE_TOOLS=ON \
                -DENABLE_SHARED_LIBS=ON \
                -DENABLE_STATIC_LIBS=ON \
                -DENABLE_TESTS=ON \
                -DENABLE_INSTALL_RIM=ON \
                -DENABLE_ICCXML=ON \
                Cmake/

      - name: 🧱 Build Project
        run: |
          cd PatchIccMAX/Build
          echo "Building with $(sysctl -n hw.ncpu) cores..."
          make -j$(sysctl -n hw.ncpu)

      - name: 📦 List Built Artifacts
        run: |
          cd PatchIccMAX/Build
          echo "Built files:"
          find . -type f \( -perm +111 -o -name "*.a" -o -name "*.so" -o -name "*.dylib" \) ! -path "*/CMakeFiles/*"

      - name: 🧪 Run CI Stub Test Harness
        run: |
          echo "=== Running CI Stub Test Harness ==="
          cd Testing
          for d in Build/Tools/*; do
            [ -d "$d" ] && export PATH="$(realpath "$d"):$PATH"
          done
          echo "RUN Local Scripts"
          pwd
          ls
          find . -type f -name '*.sh' -print -exec sh '{}' \;
          # chmod +x CreateAllProfiles.sh
          # bash CreateAllProfiles.sh
          echo "========= CI STUB TESTS COMPLETE ========="
      - name: Summary Report
        if: always()
        run: |
          echo "### Ubuntu Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Build Directory: PatchIccMAX/Build/" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts Uploaded: iccmax-macos-clang" >> $GITHUB_STEP_SUMMARY
          echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
