###############################################################
#
## Copyright (¬©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 09-APRIL-2025 -800 EDT by David Hoyt (¬©)
#
## Intent: research Issue 121 Re: Compile Failure
#
## 
#
#
#
#
#
#
#
#
#
###############################################################

name: "Issue 121"

on:
  workflow_dispatch:

jobs:
  build:
    name: "üîß Build on ${{ matrix.os }} with ${{ matrix.compiler }}"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            compiler: gcc
          - os: ubuntu-22.04
            compiler: clang
          - os: ubuntu-20.04
            compiler: gcc
          - os: ubuntu-20.04
            compiler: clang
          - os: macos-latest
            compiler: clang
          - os: macos-13
            compiler: clang

    steps:
      - name: üßæ Checkout PR Source
        uses: actions/checkout@v4
        with:
          ref: ${{ startsWith(matrix.os, 'macos') && 'pr124' || 'pr124' }}

      - name: ‚öôÔ∏è Configure Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: üì¶ Install Build Dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y             build-essential cmake gcc g++ clang clang-tools             libgtk-3-dev libpng-dev libjpeg-dev libtiff-dev libexpat1-dev             libxml2 libxml2-dev nlohmann-json3-dev             python3 python3-pip curl git llvm
      - name: üç∫ Install Build Dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install libpng nlohmann-json libxml2 wxwidgets libtiff
      - name: üß± Build wxWidgets (Linux only)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          git clone https://github.com/wxWidgets/wxWidgets.git
          cd wxWidgets
          git submodule update --init --recursive
          ./configure --enable-debug --prefix=/usr/local
          make -j$(nproc)
          sudo make install
          sudo ldconfig
      - name: üí° Set Compiler Environment
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi
      - name: üõ†Ô∏è CMake Configure
        run: |
          cd Build
          if [[ "${{ matrix.os }}" == macos* ]]; then
            export CFLAGS="-I$(brew --prefix libpng)/include"
            export LDFLAGS="-L$(brew --prefix libpng)/lib"
            if [ -d "/Library/Frameworks/Mono.framework/Headers" ]; then
              sudo mv /Library/Frameworks/Mono.framework/Headers /Library/Frameworks/Mono.framework/Headers_DISABLED
            fi
            sudo rm -rf /Library/Frameworks/Mono.framework/Headers/png.h
          fi
          cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local                 -DCMAKE_BUILD_TYPE=Release                 -DENABLE_TOOLS=ON                 -DENABLE_STATIC_LIBS=ON                 -DENABLE_SHARED_LIBS=ON                 -Wno-dev Cmake/
      - name: üî® Build Project
        run: |
          cd Build
          make -j$(nproc || sysctl -n hw.logicalcpu)
      - name: ‚úÖ Verify Build Output
        run: |
          test -f Build/CMakeCache.txt && echo "‚úÖ CMake cache present" || (echo "‚ùå Build failed" && exit 1)
      - name: üß≥ Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: iccmax-${{ matrix.os }}-${{ matrix.compiler }}-release
          path: Build

      - name: üìÑ Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: cmake-log-${{ matrix.os }}-${{ matrix.compiler }}
          path: Build/CMakeCache.txt

      - name: üñ•Ô∏è Host System Info
        run: |
          uname -a
          if [[ "${{ matrix.os }}" == macos* ]]; then
            sw_vers
            clang --version
            sysctl -a | grep machdep.cpu
          else
            cat /etc/os-release
            ${{ matrix.compiler }} --version
            lscpu
          fi
          free -m || true
          df -h
