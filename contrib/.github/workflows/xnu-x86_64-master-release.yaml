###############################################################
#
## Copyright (©) 2024-2025 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 07-MAR-2025 0853 EST by David Hoyt (©)
#
## Intent: Poll the Device and Report
#
## TODO: Refactor for all Windows & UNIX Device Reporting
#
#
###############################################################

name: "xnu-x86_64-master-release"

on:
  workflow_dispatch:

jobs:
  build-macos:
    name: Build Master Branch
    runs-on: macos-13
    strategy:
      fail-fast: false

    steps:
    # Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up Git anonymous identity
    - name: Set up Git anonymous identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

    # Clone DemoIccMAX & Install Dependencies macos-x86_64-master-release
    - name: Clone DemoIccMAX & Install Dependencies
      run: |
        git clone https://github.com/InternationalColorConsortium/DemoIccMAX.git
        cd DemoIccMAX

        # Install dependencies
        brew install nlohmann-json libxml2 wxwidgets libtiff

        # Install a known working version of LLVM that includes scan-build
        brew install llvm@17 bear

        # Ensure the correct LLVM version is used
        echo 'export PATH="/opt/homebrew/opt/llvm@17/bin:$PATH"' >> ~/.bash_profile
        echo 'export LDFLAGS="-L/opt/homebrew/opt/llvm@17/lib"' >> ~/.bash_profile
        echo 'export CPPFLAGS="-I/opt/homebrew/opt/llvm@17/include"' >> ~/.bash_profile
        source ~/.bash_profile

    # Configure the build with CMake macos-x86_64-master-release
    - name: Configure Build with CMake 
      run: |
        export PATH="/opt/homebrew/opt/llvm@17/bin:$PATH"
        mkdir -p DemoIccMAX/Build
        cd DemoIccMAX/Build
        cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=Release-Wno-dev -DENABLE_TOOLS=ON Cmake/

    # Run make on macos-x86_64-master-release
    - name: Run make
      run: |
        export PATH="/opt/homebrew/opt/llvm@17/bin:$PATH"
        cd DemoIccMAX/Build
        make -j$(sysctl -n hw.ncpu)

    # Upload built binaries as artifacts
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-x86_64-master-release build
        path: DemoIccMAX/Build

    # Check build success
    - name: Check Build Success
      run: |
        if [ $? -eq 0 ]; then
          echo "✅ Build Succeeded"
        else
          echo "❌ Build Failed"
          exit 1
        fi
