# Azure DevOps Pipeline YAML equivalent for the GitHub Action workflow
trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

jobs:
- job: Build_Linux
  displayName: 'Build and Test on Linux'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - checkout: self

  - task: Bash@3
    displayName: 'Set up Git anonymous identity'
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "devops@yourdomain.com"
        git config --global user.name "Azure DevOps"

  - task: Bash@3
    displayName: 'Install Dependencies'
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get update
        sudo apt-get install -y \
          libwxgtk-media3.0-gtk3-dev libwxgtk-webview3.0-gtk3-dev \
          libwxgtk3.0-gtk3-dev libxml2 libtiff5 libxml2-dev libtiff5-dev \
          clang-tools

  - task: Bash@3
    displayName: 'Clone the DemoIccMAX repository and checkout the PR'
    inputs:
      targetType: 'inline'
      script: |
        git clone https://github.com/InternationalColorConsortium/DemoIccMAX.git
        cd DemoIccMAX
        git revert --no-edit b90ac3933da99179df26351c39d8d9d706ac1cc6

  - task: Bash@3
    displayName: 'Configure build with CMake using scan-build'
    inputs:
      targetType: 'inline'
      script: |
        cd DemoIccMAX/Build/
        scan-build --html-title="Static Analysis Report" -o scanbuild-output cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_FLAGS="-g -fsanitize=address,undefined -fno-omit-frame-pointer -Wall" \
          -Wno-dev Cmake/

  - task: Bash@3
    displayName: 'Check for build errors with scan-build'
    inputs:
      targetType: 'inline'
      script: |
        set -euxo pipefail
        cd DemoIccMAX/Build/
        scan-build --html-title="Static Analysis Report" -o scanbuild-output make

  - task: Bash@3
    displayName: 'Create artifact directory'
    inputs:
      targetType: 'inline'
      script: mkdir -p artifact

  - task: Bash@3
    displayName: 'Copy binary tools, libraries, and archive files'
    inputs:
      targetType: 'inline'
      script: |
        if [ -d DemoIccMAX/Build/Tools ]; then
          find DemoIccMAX/Build/Tools/ -type f -executable -exec cp {} artifact/ \;
        fi
        if [ -d DemoIccMAX/Build/bin ]; then
          find DemoIccMAX/Build/bin/ -type f -executable -exec cp {} artifact/ \;
        fi
        find DemoIccMAX/Build/ -type f \( -name "*.a" -o -name "*.so" \) -exec cp {} artifact/ \;

  - task: Bash@3
    displayName: 'Label artifacts for Linux (x86_64)'
    inputs:
      targetType: 'inline'
      script: mv artifact DemoIccMAX-build-linux-x86_64

  - task: PublishPipelineArtifact@1
    displayName: 'Upload build artifacts for Linux'
    inputs:
      targetPath: 'DemoIccMAX-build-linux-x86_64'
      artifact: 'DemoIccMAX-build-linux-x86_64'

  - task: PublishPipelineArtifact@1
    displayName: 'Upload scan-build reports'
    inputs:
      targetPath: 'DemoIccMAX/Build/scanbuild-output'
      artifact: 'scan-build-report-linux'

- job: Build_macOS
  displayName: 'Build and Test on macOS'
  pool:
    vmImage: 'macos-latest'

  steps:
  - checkout: self

  - task: Bash@3
    displayName: 'Set up Git anonymous identity'
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "devops@yourdomain.com"
        git config --global user.name "Azure DevOps"

  - task: Bash@3
    displayName: 'Clone the DemoIccMAX repository and checkout the PR'
    inputs:
      targetType: 'inline'
      script: |
        git clone https://github.com/InternationalColorConsortium/DemoIccMAX.git
        cd DemoIccMAX
        git revert --no-edit b90ac3933da99179df26351c39d8d9d706ac1cc6

  - task: Bash@3
    displayName: 'Configure build with CMake'
    inputs:
      targetType: 'inline'
      script: |
        cd DemoIccMAX/Build/
        cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_FLAGS="-g -fsanitize=address,undefined -fno-omit-frame-pointer -Wall" \
          -Wno-dev Cmake/

  - task: Bash@3
    displayName: 'Build the project with make'
    inputs:
      targetType: 'inline'
      script: |
        cd DemoIccMAX/Build/
        make

  - task: Bash@3
    displayName: 'Create artifact directory'
    inputs:
      targetType: 'inline'
      script: mkdir -p artifact

  - task: Bash@3
    displayName: 'Copy binary tools, libraries, and archive files'
    inputs:
      targetType: 'inline'
      script: |
        if [ -d DemoIccMAX/Build/Tools ]; then
          find DemoIccMAX/Build/Tools/ -type f -perm +111 -exec cp {} artifact/ \;
        fi
        if [ -d DemoIccMAX/Build/bin ]; then
          find DemoIccMAX/Build/bin/ -type f -perm +111 -exec cp {} artifact/ \;
        fi
        find DemoIccMAX/Build/ -type f \( -name "*.a" -o -name "*.lib" -o -name "*.dylib" \) -exec cp {} artifact/ \;

  - task: Bash@3
    displayName: 'Label artifacts for macOS (x86_64)'
    inputs:
      targetType: 'inline'
      script: mv artifact DemoIccMAX-build-macos-x86_64

  - task: PublishPipelineArtifact@1
    displayName: 'Upload build artifacts for macOS'
    inputs:
      targetPath: 'DemoIccMAX-build-macos-x86_64'
      artifact: 'DemoIccMAX-build-macos-x86_64'
